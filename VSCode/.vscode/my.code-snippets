// To learn how to write snippets for VS Code, look here:

// https://code.visualstudio.com/docs/editor/userdefinedsnippets
// https://code.visualstudio.com/docs/languages/identifiers
// https://docs.microsoft.com/en-us/visualstudio/ide/walkthrough-creating-a-code-snippet?view=vs-2017

{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"Special for loop": {
		"scope": "csharp",
		"prefix": "special-for",
		"body": [
			"for (${1:int} i = 0; i < ${2:length}; i++)" 
			"{",
			"\t$0",
			"}"
		],
		"description": "A new snippet I created for the same old for loop just to see how to create a snippet."
	},

	"Console app": {
		"scope": "csharp",
		"prefix": "console-app",
		"body": [
			"using System;",
			"\n",
			"public class Program",
			"{",
				"\tpublic static void Main(string[] args)",
				"\t{",
					"\t\tConsole.WriteLine(\"$0\");",
					"\t\tConsole.ReadKey();",
				"\t}",
			"}"
		],
		"description": "A simple console application"
	}
}